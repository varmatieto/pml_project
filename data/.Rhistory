setwd("~/GitHub/pml_project")
setwd("~/GitHub/pml_project")
library(caret, quietly=TRUE)
url_train <- 'https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv'
url_test <- 'https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv'
if (!file.exists('data/data_train.csv')) {
download.file(url = url_train, destfile = 'data_train.csv')
}
if (!file.exists('data/data_test.csv')) {
download.file(url = url_test, destfile = 'data_test.csv')
}
pml_train <- read.csv(file = 'data/data_train.csv',
na.strings = c('NA','#DIV/0!',''))
pml_submit <- read.csv(file = 'data/data_test.csv',
na.strings = c('NA','#DIV/0!',''))
# str(pml_submit)
# str(pml_train)
dim(pml_submit)
dim(pml_train)
# colnames are identical except "problem_id" and "classe"
ct<-colnames(pml_submit)
cd<-colnames(pml_train)
ct[!(ct%in%cd)]
cd[!(cd%in%ct)]
# there are several variables full of NA
colna<-colSums(is.na(pml_submit))
hist(colna)
colna0<-colSums(is.na(pml_submit)) == 0
colna20<-colSums(is.na(pml_submit)) == 20
table(colna0)
table(colna20)
colnames(pml_submit)[colna0]
features <- colnames(pml_submit[colna0])[8:59]
data <- pml_train[,c(features,"classe")]
submit <- pml_submit[,c(features,"problem_id")]
dim(data)
dim(submit)
plot(data$classe,col=rainbow(5),main = "`classe` frequency plot")
set.seed(2204)
inTrain = createDataPartition(data$classe, p = 0.75, list = F)
training = data[inTrain,]
testing = data[-inTrain,]
dim(training)
dim(testing)
colnat<-colSums(is.na(pml_train))
hist(colnat)
p4<-summary(myimportance)
# set local directory
setwd ("~/GitHub/pml_project/data")
library(caret, quietly=TRUE)
url_train <- 'https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv'
url_test <- 'https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv'
if (!file.exists('~/GitHub/pml_project/data/data_train.csv')) {
download.file(url = url_train, destfile = 'data_train.csv')
}
if (!file.exists('~/GitHub/pml_project/data/data_test.csv')) {
download.file(url = url_test, destfile = 'data_test.csv')
}
pml_train <- read.csv(file = '~/GitHub/pml_project/data/data_train.csv',
na.strings = c('NA','#DIV/0!',''))
pml_submit <- read.csv(file = '~/GitHub/pml_project/data/data_test.csv',
na.strings = c('NA','#DIV/0!',''))
# str(pml_submit)
# str(pml_train)
dim(pml_submit)
dim(pml_train) # 19622   160
colna0<-colSums(is.na(pml_submit)) == 0
# colnames(pml_submit)[colna0]
features <- colnames(pml_submit[colna0])[8:59]
data <- pml_train[,c(features,"classe")]
submit <- pml_submit[,c(features,"problem_id")]
dim(data)
dim(submit)
set.seed(4543)
inTrain = createDataPartition(data$classe, p = 0.75, list = F)
training = data[inTrain,]
set.seed(4543)
inTrain = createDataPartition(data$classe, p = 0.75, list = F)
training = data[inTrain,]
validating = data[-inTrain,]
dim(training)
dim(validating)
model_all <- train(classe ~ ., data = training,
method = "rf",
trControl = trainControl(method = "cv",
number = 4,
allowParallel = TRUE,
verboseIter = TRUE))
model_all$finalModel
dim(training)
colna0
ct<-colnames(pml_submit)
cd<-colnames(pml_train)
ct[!(ct%in%cd)]
cd[!(cd%in%ct)]
model_all <- train(classe ~ ., data = training,
method = "rf",
trControl = trainControl(method = "cv",
number = 4,
allowParallel = TRUE)
model_all <- train(classe ~ ., data = training,
method = "rf",
trControl = trainControl(method = "cv",
number = 4,
allowParallel = TRUE))
model_all$finalModel
str(model_all)
model_all$results$Accuracy
model_all$results$Accuracy[1]
model_all$finalModel$predicted
confusionMatrix(traing$classe, model_all$finalModel$predicted )
confusionMatrix(training$classe, model_all$finalModel$predicted )
model_all$results$Accuracy[1]
model_all$results$Accuracy
model_all$finalModel
model_all$results$Accuracy
confusionMatrix(validating$classe,predict(model_all,validating))
args(confusionMatrix)
confusionMatrix
